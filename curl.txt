

curl [options] [URL]

-X, --request <method>: Specifies the HTTP method to use (e.g., GET, POST, PUT, DELETE).
-H, --header <header>: Adds custom headers to the request.
-d, --data <data>: Sends data in the request body (e.g., for POST requests).
-o, --output <file>: Writes output to a file instead of printing it to the console.
-L, --location: Follows redirects.
-i, --include: Includes the response headers in the output.
-v, --verbose: Displays detailed information about the request and response.
Examples:

Making a GET request:

curl https://api.example.com/users
This command sends a GET request to the specified URL and displays the response body on the console.

Making a POST request with data:

curl -X POST -H "Content-Type: application/json" -d '{"name": "John", "age": 30}' https://api.example.com/users
This command sends a POST request with JSON data to create a new user on the specified URL.

Downloading a file:
curl -o filename.txt https://example.com/file.txt
This command downloads a file from the specified URL and saves it as filename.txt.

Following redirects and displaying response headers:

curl -i -L https://example.com
This command follows any redirects and displays the response headers, including HTTP status codes.

Displaying detailed information:

curl -v https://example.com
This command provides verbose output, including request and response headers, along with other debugging information.

These are just a few examples of how the curl command can be used. It offers extensive functionality for interacting with web services and retrieving web content from the command line. You can explore more options and features by referring to the curl manual (man curl) or its documentation.



